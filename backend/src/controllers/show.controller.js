const { Show: Show_Ctrl, Theater: Theater_Ctrl_Show, Movie: Movie_Ctrl_Show, Booking: Booking_Ctrl_Show, BookingSeat: BS_Ctrl_Show } = require('../models');
const { Op: Op_Show } = require('sequelize');
exports.findShowsForMovie = async (req, res) => { const { movieId } = req.query; const whereClause = movieId ? { movie_id: movieId } : {}; try { const shows = await Show_Ctrl.findAll({ where: whereClause, include: [{ model: Theater_Ctrl_Show }, { model: Movie_Ctrl_Show, attributes: ['title'] }], order: [['show_time', 'ASC']] }); const showsWithBookedSeats = await Promise.all(shows.map(async (show) => { const bookings = await Booking_Ctrl_Show.findAll({ where: { show_id: show.show_id, status: { [Op_Show.ne]: 'cancelled' }, expires_at: { [Op_Show.or]: { [Op_Show.gt]: new Date(), [Op_Show.is]: null } } }, include: [BS_Ctrl_Show] }); const bookedSeats = bookings.flatMap(b => b.BookingSeats.map(bs => bs.seat_identifier)); return { ...show.toJSON(), bookedSeats }; })); res.status(200).send(showsWithBookedSeats); } catch (err) { res.status(500).send({ message: err.message }); } };
